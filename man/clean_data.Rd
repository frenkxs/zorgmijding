% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_v02.R
\name{clean_data}
\alias{clean_data}
\title{clean_data}
\usage{
clean_data(
  umc = c("utrecht", "maastricht", "amsterdam", "groningen", "rotterdam"),
  clean_types = FALSE,
  age_groups = c("0-19", "20-39", "40-59", "60-79", "80+"),
  col_visits = c("pat_id", "sex", "pat_dob", "prakid", "Hisnaam", "contact_id",
    "contact_date", "Soepcode", "Contactsoort", "icpc"),
  col_pats = c("pat_id", "sex", "pat_dob", "fu_end", "fu_start", "prak_id", "dereg_date")
)
}
\arguments{
\item{umc}{University medical centre that provides the data. It can take the
the following values: "utrecht", "maastricht", "amsterdam", "groningen", "rotterdam"}

\item{clean_types}{TRUE or FALSE value indicating whether the list of contact
types should be used for cleaning the data. If set to TRUE then only
eligible contact types will be considered, based on the 'Contactsoort' variable. You
can access the list of eligible contact types by data("consult_contact")}

\item{age_groups}{Definition of age groups stratification by age.}

\item{col_visits}{Vector with the names of columns in the visits table in the order in which
they occur in the table. Use the term below for select variables (on the left hand side is the
original variable name, on the right hand side to one to be used):
\itemize{
\item pat: pat_id
\item contactid: contact_id
\item contactd: contact_date
\item cod: ICPC
}}

\item{col_pats}{Vector with the names of columns in the patients table in the order in which
they occur in the table. Use the term below for select variables (on the left hand side is the
original variable name, on the right hand side to one to be used):
\itemize{
\item pat: pat_id
\item Gender: sex
\item patbird: pat_dob
\item Datum_laatste_extractie: fu_end
\item Inschrijfdatum: fu_start
\item Praktijk_id: prak_id
\item Uischrijfdatum: dereg_date
}}
}
\description{
Takes raw data from an sql output and format and clean it for further analysis This is the fist
function in this pipeline, it should be run first. It makes sure the variables are consistently
named in the same order and have the right format. It also check there are no missing or
nonsensical data. It ask the user to provide two raw data files: the one with GP contacts and
one with all patients. The cleaned data are automatically saved in the 'results' folder created
as a subfolder in the folder in which the raw data are loca ted.
}
